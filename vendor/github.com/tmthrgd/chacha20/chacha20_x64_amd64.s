// Created by chacha20_x64.pl - DO NOT EDIT
// perl chacha20_x64.pl golang-no-avx chacha20_x64_amd64.s

// +build amd64,!gccgo,!appengine

// This code was translated into a form compatible with 6a from the public
// domain sources in SUPERCOP: http://bench.cr.yp.to/supercop.html

#include "textflag.h"

TEXT Â·chacha_20_core_x64(SB),$576-32
	MOVQ	out+0(FP),DX
	MOVQ	in+8(FP),SI
	MOVQ	in_len+16(FP),BX
	MOVQ	state+24(FP),DI

	MOVQ	$state-512(SP),R12
	ANDQ	$~63,R12

	MOVQ	$3684054920433006693,R8
	MOVQ	$7719281312240119090,R9
	MOVD	R8,X8
	MOVD	R9,X14
	PUNPCKLQDQ	X14,X8
	// MOVDQU	0(DI),X9
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x0f
	// MOVDQU	16(DI),X10
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x57; BYTE $0x10
	// MOVDQU	32(DI),X11
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x5f; BYTE $0x20
	MOVQ	$20,R11
	MOVQ	$1,R9
	// MOVDQA	X8,0(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x04; BYTE $0x24
	// MOVDQA	X9,16(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x4c; BYTE $0x24; BYTE $0x10
	// MOVDQA	X10,32(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x54; BYTE $0x24; BYTE $0x20
	// MOVDQA	X11,48(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x5c; BYTE $0x24; BYTE $0x30
	CMPQ	BX,$256
	JB	chacha_blocks_sse2_below256
	PSHUFD	$0,X8,X0
	PSHUFD	$85,X8,X1
	PSHUFD	$170,X8,X2
	PSHUFD	$255,X8,X3
	// MOVDQA	X0,128(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x84; BYTE $0x24; BYTE $0x80
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	X1,144(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x8c; BYTE $0x24; BYTE $0x90
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	X2,160(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x94; BYTE $0x24; BYTE $0xa0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	X3,176(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x9c; BYTE $0x24; BYTE $0xb0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	PSHUFD	$0,X9,X0
	PSHUFD	$85,X9,X1
	PSHUFD	$170,X9,X2
	PSHUFD	$255,X9,X3
	// MOVDQA	X0,192(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x84; BYTE $0x24; BYTE $0xc0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	X1,208(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x8c; BYTE $0x24; BYTE $0xd0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	X2,224(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x94; BYTE $0x24; BYTE $0xe0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	X3,240(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x9c; BYTE $0x24; BYTE $0xf0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	PSHUFD	$0,X10,X0
	PSHUFD	$85,X10,X1
	PSHUFD	$170,X10,X2
	PSHUFD	$255,X10,X3
	// MOVDQA	X0,256(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x84; BYTE $0x24; BYTE $0x00
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X1,272(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x8c; BYTE $0x24; BYTE $0x10
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X2,288(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x94; BYTE $0x24; BYTE $0x20
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X3,304(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x9c; BYTE $0x24; BYTE $0x30
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	PSHUFD	$170,X11,X0
	PSHUFD	$255,X11,X1
	// MOVDQA	X0,352(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x84; BYTE $0x24; BYTE $0x60
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X1,368(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x8c; BYTE $0x24; BYTE $0x70
	BYTE $0x01; BYTE $0x00; BYTE $0x00

chacha_blocks_sse2_atleast256:
	MOVQ	48(R12),AX
	LEAQ	1(AX),R8
	LEAQ	2(AX),R9
	LEAQ	3(AX),R10
	LEAQ	4(AX),R13
	MOVL	AX,320(R12)
	MOVL	R8,4+320(R12)
	MOVL	R9,8+320(R12)
	MOVL	R10,12+320(R12)
	SHRQ	$32,AX
	SHRQ	$32,R8
	SHRQ	$32,R9
	SHRQ	$32,R10
	MOVL	AX,336(R12)
	MOVL	R8,4+336(R12)
	MOVL	R9,8+336(R12)
	MOVL	R10,12+336(R12)
	MOVQ	R13,48(R12)
	MOVQ	$20,R11
	// MOVDQA	128(R12),X0
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x84; BYTE $0x24; BYTE $0x80
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	144(R12),X1
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x8c; BYTE $0x24; BYTE $0x90
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	160(R12),X2
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x94; BYTE $0x24; BYTE $0xa0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	176(R12),X3
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x9c; BYTE $0x24; BYTE $0xb0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	192(R12),X4
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xa4; BYTE $0x24; BYTE $0xc0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	208(R12),X5
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xac; BYTE $0x24; BYTE $0xd0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	224(R12),X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xb4; BYTE $0x24; BYTE $0xe0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	240(R12),X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xbc; BYTE $0x24; BYTE $0xf0
	BYTE $0x00; BYTE $0x00; BYTE $0x00
	// MOVDQA	256(R12),X8
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x84; BYTE $0x24; BYTE $0x00
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	272(R12),X9
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x8c; BYTE $0x24; BYTE $0x10
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	288(R12),X10
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x94; BYTE $0x24; BYTE $0x20
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	304(R12),X11
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x9c; BYTE $0x24; BYTE $0x30
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	320(R12),X12
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0xa4; BYTE $0x24; BYTE $0x40
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	336(R12),X13
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0xac; BYTE $0x24; BYTE $0x50
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	352(R12),X14
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0xb4; BYTE $0x24; BYTE $0x60
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	368(R12),X15
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0xbc; BYTE $0x24; BYTE $0x70
	BYTE $0x01; BYTE $0x00; BYTE $0x00
chacha_blocks_sse2_mainloop1:
	PADDD	X4,X0
	PADDD	X5,X1
	PXOR	X0,X12
	PXOR	X1,X13
	PADDD	X6,X2
	PADDD	X7,X3
	// MOVDQA	X6,96(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x74; BYTE $0x24; BYTE $0x60
	PXOR	X2,X14
	PXOR	X3,X15
	PSHUFLW	$177,X12,X12
	PSHUFHW	$177,X12,X12
	PSHUFLW	$177,X13,X13
	PSHUFHW	$177,X13,X13
	PSHUFLW	$177,X14,X14
	PSHUFHW	$177,X14,X14
	PSHUFLW	$177,X15,X15
	PSHUFHW	$177,X15,X15
	PADDD	X12,X8
	PADDD	X13,X9
	PADDD	X14,X10
	PADDD	X15,X11
	// MOVDQA	X12,112(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x64; BYTE $0x24; BYTE $0x70
	PXOR	X8,X4
	PXOR	X9,X5
	// MOVDQA	96(R12),X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x74; BYTE $0x24; BYTE $0x60
	// MOVDQA	X4,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe4
	// PSLLD	$12,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf4; BYTE $0x0c
	// PSRLD	$20,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x14
	PXOR	X12,X4
	// MOVDQA	X5,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe5
	// PSLLD	$12,X5
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf5; BYTE $0x0c
	// PSRLD	$20,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x14
	PXOR	X12,X5
	PXOR	X10,X6
	PXOR	X11,X7
	// MOVDQA	X6,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe6
	// PSLLD	$12,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf6; BYTE $0x0c
	// PSRLD	$20,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x14
	PXOR	X12,X6
	// MOVDQA	X7,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe7
	// PSLLD	$12,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf7; BYTE $0x0c
	// PSRLD	$20,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x14
	PXOR	X12,X7
	// MOVDQA	112(R12),X12
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x64; BYTE $0x24; BYTE $0x70
	PADDD	X4,X0
	PADDD	X5,X1
	PXOR	X0,X12
	PXOR	X1,X13
	PADDD	X6,X2
	PADDD	X7,X3
	// MOVDQA	X6,96(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x74; BYTE $0x24; BYTE $0x60
	PXOR	X2,X14
	PXOR	X3,X15
	// MOVDQA	X12,X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xf4
	// PSLLD	$ 8,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf4; BYTE $0x08
	// PSRLD	$24,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd6; BYTE $0x18
	PXOR	X6,X12
	// MOVDQA	X13,X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xf5
	// PSLLD	$ 8,X13
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf5; BYTE $0x08
	// PSRLD	$24,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd6; BYTE $0x18
	PXOR	X6,X13
	PADDD	X12,X8
	PADDD	X13,X9
	// MOVDQA	X14,X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xf6
	// PSLLD	$ 8,X14
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf6; BYTE $0x08
	// PSRLD	$24,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd6; BYTE $0x18
	PXOR	X6,X14
	// MOVDQA	X15,X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xf7
	// PSLLD	$ 8,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf7; BYTE $0x08
	// PSRLD	$24,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd6; BYTE $0x18
	PXOR	X6,X15
	PADDD	X14,X10
	PADDD	X15,X11
	// MOVDQA	X12,112(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x64; BYTE $0x24; BYTE $0x70
	PXOR	X8,X4
	PXOR	X9,X5
	// MOVDQA	96(R12),X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x74; BYTE $0x24; BYTE $0x60
	// MOVDQA	X4,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe4
	// PSLLD	$ 7,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf4; BYTE $0x07
	// PSRLD	$25,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x19
	PXOR	X12,X4
	// MOVDQA	X5,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe5
	// PSLLD	$ 7,X5
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf5; BYTE $0x07
	// PSRLD	$25,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x19
	PXOR	X12,X5
	PXOR	X10,X6
	PXOR	X11,X7
	// MOVDQA	X6,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe6
	// PSLLD	$ 7,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf6; BYTE $0x07
	// PSRLD	$25,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x19
	PXOR	X12,X6
	// MOVDQA	X7,X12
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xe7
	// PSLLD	$ 7,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf7; BYTE $0x07
	// PSRLD	$25,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x19
	PXOR	X12,X7
	// MOVDQA	112(R12),X12
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x64; BYTE $0x24; BYTE $0x70
	PADDD	X5,X0
	PADDD	X6,X1
	PXOR	X0,X15
	PXOR	X1,X12
	PADDD	X7,X2
	PADDD	X4,X3
	// MOVDQA	X7,96(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x7c; BYTE $0x24; BYTE $0x60
	PXOR	X2,X13
	PXOR	X3,X14
	PSHUFLW	$177,X15,X15
	PSHUFHW	$177,X15,X15
	PSHUFLW	$177,X12,X12
	PSHUFHW	$177,X12,X12
	PSHUFLW	$177,X13,X13
	PSHUFHW	$177,X13,X13
	PSHUFLW	$177,X14,X14
	PSHUFHW	$177,X14,X14
	PADDD	X15,X10
	PADDD	X12,X11
	PADDD	X13,X8
	PADDD	X14,X9
	// MOVDQA	X15,112(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x7c; BYTE $0x24; BYTE $0x70
	PXOR	X10,X5
	PXOR	X11,X6
	// MOVDQA	96(R12),X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x7c; BYTE $0x24; BYTE $0x60
	// MOVDQA	X5,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xfd
	// PSLLD	$ 12,X5
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf5; BYTE $0x0c
	// PSRLD	$20,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x14
	PXOR	X15,X5
	// MOVDQA	X6,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xfe
	// PSLLD	$ 12,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf6; BYTE $0x0c
	// PSRLD	$20,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x14
	PXOR	X15,X6
	PXOR	X8,X7
	PXOR	X9,X4
	// MOVDQA	X7,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xff
	// PSLLD	$ 12,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf7; BYTE $0x0c
	// PSRLD	$20,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x14
	PXOR	X15,X7
	// MOVDQA	X4,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xfc
	// PSLLD	$ 12,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf4; BYTE $0x0c
	// PSRLD	$20,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x14
	PXOR	X15,X4
	// MOVDQA	112(R12),X15
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x7c; BYTE $0x24; BYTE $0x70
	PADDD	X5,X0
	PADDD	X6,X1
	PXOR	X0,X15
	PXOR	X1,X12
	PADDD	X7,X2
	PADDD	X4,X3
	// MOVDQA	X7,96(R12)
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x7f; BYTE $0x7c; BYTE $0x24; BYTE $0x60
	PXOR	X2,X13
	PXOR	X3,X14
	// MOVDQA	X15,X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xff
	// PSLLD	$ 8,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf7; BYTE $0x08
	// PSRLD	$24,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x18
	PXOR	X7,X15
	// MOVDQA	X12,X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xfc
	// PSLLD	$ 8,X12
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf4; BYTE $0x08
	// PSRLD	$24,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x18
	PXOR	X7,X12
	PADDD	X15,X10
	PADDD	X12,X11
	// MOVDQA	X13,X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xfd
	// PSLLD	$ 8,X13
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf5; BYTE $0x08
	// PSRLD	$24,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x18
	PXOR	X7,X13
	// MOVDQA	X14,X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xfe
	// PSLLD	$ 8,X14
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xf6; BYTE $0x08
	// PSRLD	$24,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x18
	PXOR	X7,X14
	PADDD	X13,X8
	PADDD	X14,X9
	// MOVDQA	X15,112(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x7c; BYTE $0x24; BYTE $0x70
	PXOR	X10,X5
	PXOR	X11,X6
	// MOVDQA	96(R12),X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x7c; BYTE $0x24; BYTE $0x60
	// MOVDQA	X5,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xfd
	// PSLLD	$ 7,X5
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf5; BYTE $0x07
	// PSRLD	$25,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x19
	PXOR	X15,X5
	// MOVDQA	X6,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xfe
	// PSLLD	$ 7,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf6; BYTE $0x07
	// PSRLD	$25,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x19
	PXOR	X15,X6
	PXOR	X8,X7
	PXOR	X9,X4
	// MOVDQA	X7,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xff
	// PSLLD	$ 7,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf7; BYTE $0x07
	// PSRLD	$25,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x19
	PXOR	X15,X7
	// MOVDQA	X4,X15
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xfc
	// PSLLD	$ 7,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf4; BYTE $0x07
	// PSRLD	$25,X15
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x72; BYTE $0xd7; BYTE $0x19
	PXOR	X15,X4
	// MOVDQA	112(R12),X15
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x7c; BYTE $0x24; BYTE $0x70
	SUBQ	$2,R11
	JNZ	chacha_blocks_sse2_mainloop1
	PADDD	128(R12),X0
	PADDD	144(R12),X1
	PADDD	160(R12),X2
	PADDD	176(R12),X3
	PADDD	192(R12),X4
	PADDD	208(R12),X5
	PADDD	224(R12),X6
	PADDD	240(R12),X7
	PADDD	256(R12),X8
	PADDD	272(R12),X9
	PADDD	288(R12),X10
	PADDD	304(R12),X11
	PADDD	320(R12),X12
	PADDD	336(R12),X13
	PADDD	352(R12),X14
	PADDD	368(R12),X15
	// MOVDQA	X8,384(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x84; BYTE $0x24; BYTE $0x80
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X9,400(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x8c; BYTE $0x24; BYTE $0x90
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X10,416(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x94; BYTE $0x24; BYTE $0xa0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X11,432(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0x9c; BYTE $0x24; BYTE $0xb0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X12,448(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0xa4; BYTE $0x24; BYTE $0xc0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X13,464(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0xac; BYTE $0x24; BYTE $0xd0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X14,480(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0xb4; BYTE $0x24; BYTE $0xe0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X15,496(R12)
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x7f; BYTE $0xbc; BYTE $0x24; BYTE $0xf0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X0,X8
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xc0
	// MOVDQA	X2,X9
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xca
	// MOVDQA	X4,X10
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xd4
	// MOVDQA	X6,X11
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xde
	// PUNPCKHDQ	X1,X0
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xc1
	// PUNPCKHDQ	X3,X2
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xd3
	// PUNPCKHDQ	X5,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xe5
	// PUNPCKHDQ	X7,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xf7
	// PUNPCKLDQ	X1,X8
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xc1
	// PUNPCKLDQ	X3,X9
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xcb
	// PUNPCKLDQ	X5,X10
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xd5
	// PUNPCKLDQ	X7,X11
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xdf
	// MOVDQA	X0,X1
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xc8
	// MOVDQA	X4,X3
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xdc
	// MOVDQA	X8,X5
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xe8
	// MOVDQA	X10,X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xfa
	PUNPCKHQDQ	X2,X0
	PUNPCKHQDQ	X6,X4
	PUNPCKHQDQ	X9,X8
	PUNPCKHQDQ	X11,X10
	PUNPCKLQDQ	X2,X1
	PUNPCKLQDQ	X6,X3
	PUNPCKLQDQ	X9,X5
	PUNPCKLQDQ	X11,X7
	// MOVDQU	0(SI),X2
	BYTE $0xf3; BYTE $0x0f; BYTE $0x6f; BYTE $0x16
	// MOVDQU	16(SI),X6
	BYTE $0xf3; BYTE $0x0f; BYTE $0x6f; BYTE $0x76; BYTE $0x10
	// MOVDQU	64(SI),X9
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x4e; BYTE $0x40
	// MOVDQU	80(SI),X11
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x5e; BYTE $0x50
	// MOVDQU	128(SI),X12
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xa6; BYTE $0x80; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	// MOVDQU	144(SI),X13
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xae; BYTE $0x90; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	// MOVDQU	192(SI),X14
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xb6; BYTE $0xc0; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	// MOVDQU	208(SI),X15
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xbe; BYTE $0xd0; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	PXOR	X2,X5
	PXOR	X6,X7
	PXOR	X9,X8
	PXOR	X11,X10
	PXOR	X12,X1
	PXOR	X13,X3
	PXOR	X14,X0
	PXOR	X15,X4
	// MOVDQU	X5,0(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x2a
	// MOVDQU	X7,16(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x7a; BYTE $0x10
	// MOVDQU	X8,64(DX)
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x7f; BYTE $0x42; BYTE $0x40
	// MOVDQU	X10,80(DX)
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x7f; BYTE $0x52; BYTE $0x50
	// MOVDQU	X1,128(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x8a; BYTE $0x80; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQU	X3,144(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x9a; BYTE $0x90; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQU	X0,192(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x82; BYTE $0xc0; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQU	X4,208(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0xa2; BYTE $0xd0; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQA	384(R12),X0
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x84; BYTE $0x24; BYTE $0x80
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	400(R12),X1
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x8c; BYTE $0x24; BYTE $0x90
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	416(R12),X2
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x94; BYTE $0x24; BYTE $0xa0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	432(R12),X3
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0x9c; BYTE $0x24; BYTE $0xb0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	448(R12),X4
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xa4; BYTE $0x24; BYTE $0xc0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	464(R12),X5
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xac; BYTE $0x24; BYTE $0xd0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	480(R12),X6
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xb4; BYTE $0x24; BYTE $0xe0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	496(R12),X7
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xbc; BYTE $0x24; BYTE $0xf0
	BYTE $0x01; BYTE $0x00; BYTE $0x00
	// MOVDQA	X0,X8
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xc0
	// MOVDQA	X2,X9
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xca
	// MOVDQA	X4,X10
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xd4
	// MOVDQA	X6,X11
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xde
	// PUNPCKLDQ	X1,X8
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xc1
	// PUNPCKLDQ	X3,X9
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xcb
	// PUNPCKHDQ	X1,X0
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xc1
	// PUNPCKHDQ	X3,X2
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xd3
	// PUNPCKLDQ	X5,X10
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xd5
	// PUNPCKLDQ	X7,X11
	BYTE $0x66; BYTE $0x44; BYTE $0x0f; BYTE $0x62; BYTE $0xdf
	// PUNPCKHDQ	X5,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xe5
	// PUNPCKHDQ	X7,X6
	BYTE $0x66; BYTE $0x0f; BYTE $0x6a; BYTE $0xf7
	// MOVDQA	X8,X1
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xc8
	// MOVDQA	X0,X3
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xd8
	// MOVDQA	X10,X5
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xea
	// MOVDQA	X4,X7
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xfc
	PUNPCKLQDQ	X9,X1
	PUNPCKLQDQ	X11,X5
	PUNPCKHQDQ	X9,X8
	PUNPCKHQDQ	X11,X10
	PUNPCKLQDQ	X2,X3
	PUNPCKLQDQ	X6,X7
	PUNPCKHQDQ	X2,X0
	PUNPCKHQDQ	X6,X4
	// MOVDQU	32(SI),X2
	BYTE $0xf3; BYTE $0x0f; BYTE $0x6f; BYTE $0x56; BYTE $0x20
	// MOVDQU	48(SI),X6
	BYTE $0xf3; BYTE $0x0f; BYTE $0x6f; BYTE $0x76; BYTE $0x30
	// MOVDQU	96(SI),X9
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x4e; BYTE $0x60
	// MOVDQU	112(SI),X11
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x5e; BYTE $0x70
	// MOVDQU	160(SI),X12
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xa6; BYTE $0xa0; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	// MOVDQU	176(SI),X13
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xae; BYTE $0xb0; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	// MOVDQU	224(SI),X14
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xb6; BYTE $0xe0; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	// MOVDQU	240(SI),X15
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0xbe; BYTE $0xf0; BYTE $0x00
	BYTE $0x00; BYTE $0x00
	PXOR	X2,X1
	PXOR	X6,X5
	PXOR	X9,X8
	PXOR	X11,X10
	PXOR	X12,X3
	PXOR	X13,X7
	PXOR	X14,X0
	PXOR	X15,X4
	// MOVDQU	X1,32(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x4a; BYTE $0x20
	// MOVDQU	X5,48(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x6a; BYTE $0x30
	// MOVDQU	X8,96(DX)
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x7f; BYTE $0x42; BYTE $0x60
	// MOVDQU	X10,112(DX)
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x7f; BYTE $0x52; BYTE $0x70
	// MOVDQU	X3,160(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x9a; BYTE $0xa0; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQU	X7,176(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0xba; BYTE $0xb0; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQU	X0,224(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x82; BYTE $0xe0; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	// MOVDQU	X4,240(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0xa2; BYTE $0xf0; BYTE $0x00; BYTE $0x00
	BYTE $0x00
	ADDQ	$256,SI
	ADDQ	$256,DX
	SUBQ	$256,BX
	CMPQ	BX,$256
	JAE	chacha_blocks_sse2_atleast256
	// MOVDQA	0(R12),X8
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x04; BYTE $0x24
	// MOVDQA	16(R12),X9
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x4c; BYTE $0x24; BYTE $0x10
	// MOVDQA	32(R12),X10
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x54; BYTE $0x24; BYTE $0x20
	// MOVDQA	48(R12),X11
	BYTE $0x66; BYTE $0x45; BYTE $0x0f; BYTE $0x6f; BYTE $0x5c; BYTE $0x24; BYTE $0x30
	MOVQ	$1,R9
chacha_blocks_sse2_below256:
	MOVQ	R9,X5
	ANDQ	BX,BX
	JZ	chacha_blocks_sse2_done
	CMPQ	BX,$64
	JB	chacha_blocks_sse2_done
chacha_blocks_sse2_above63:
	// MOVDQA	X8,X0
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xc0
	// MOVDQA	X9,X1
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xc9
	// MOVDQA	X10,X2
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xd2
	// MOVDQA	X11,X3
	BYTE $0x66; BYTE $0x41; BYTE $0x0f; BYTE $0x6f; BYTE $0xdb
	MOVQ	$20,R11
chacha_blocks_sse2_mainloop2:
	PADDD	X1,X0
	PXOR	X0,X3
	PSHUFLW	$177,X3,X3
	PSHUFHW	$177,X3,X3
	PADDD	X3,X2
	PXOR	X2,X1
	// MOVDQA	X1,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xe1
	// PSLLD	$12,X1
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf1; BYTE $0x0c
	// PSRLD	$20,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x14
	PXOR	X4,X1
	PADDD	X1,X0
	PXOR	X0,X3
	// MOVDQA	X3,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xe3
	// PSLLD	$8,X3
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf3; BYTE $0x08
	// PSRLD	$24,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x18
	PSHUFD	$147,X0,X0
	PXOR	X4,X3
	PADDD	X3,X2
	PSHUFD	$78,X3,X3
	PXOR	X2,X1
	PSHUFD	$57,X2,X2
	// MOVDQA	X1,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xe1
	// PSLLD	$7,X1
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf1; BYTE $0x07
	// PSRLD	$25,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x19
	PXOR	X4,X1
	SUBQ	$2,R11
	PADDD	X1,X0
	PXOR	X0,X3
	PSHUFLW	$177,X3,X3
	PSHUFHW	$177,X3,X3
	PADDD	X3,X2
	PXOR	X2,X1
	// MOVDQA	X1,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xe1
	// PSLLD	$12,X1
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf1; BYTE $0x0c
	// PSRLD	$20,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x14
	PXOR	X4,X1
	PADDD	X1,X0
	PXOR	X0,X3
	// MOVDQA	X3,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xe3
	// PSLLD	$8,X3
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf3; BYTE $0x08
	// PSRLD	$24,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x18
	PSHUFD	$57,X0,X0
	PXOR	X4,X3
	PADDD	X3,X2
	PSHUFD	$78,X3,X3
	PXOR	X2,X1
	PSHUFD	$147,X2,X2
	// MOVDQA	X1,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x6f; BYTE $0xe1
	// PSLLD	$7,X1
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xf1; BYTE $0x07
	// PSRLD	$25,X4
	BYTE $0x66; BYTE $0x0f; BYTE $0x72; BYTE $0xd4; BYTE $0x19
	PXOR	X4,X1
	JNZ	chacha_blocks_sse2_mainloop2
	PADDD	X8,X0
	PADDD	X9,X1
	PADDD	X10,X2
	PADDD	X11,X3
	// MOVDQU	0(SI),X12
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x26
	// MOVDQU	16(SI),X13
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x6e; BYTE $0x10
	// MOVDQU	32(SI),X14
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x76; BYTE $0x20
	// MOVDQU	48(SI),X15
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x6f; BYTE $0x7e; BYTE $0x30
	PXOR	X12,X0
	PXOR	X13,X1
	PXOR	X14,X2
	PXOR	X15,X3
	ADDQ	$64,SI
	// MOVDQU	X0,0(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x02
	// MOVDQU	X1,16(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x4a; BYTE $0x10
	// MOVDQU	X2,32(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x52; BYTE $0x20
	// MOVDQU	X3,48(DX)
	BYTE $0xf3; BYTE $0x0f; BYTE $0x7f; BYTE $0x5a; BYTE $0x30
	PADDQ	X5,X11
	CMPQ	BX,$64
	JBE	chacha_blocks_sse2_done
	ADDQ	$64,DX
	SUBQ	$64,BX
	JMP	chacha_blocks_sse2_below256
chacha_blocks_sse2_done:
	// MOVDQU	X11,32(DI)
	BYTE $0xf3; BYTE $0x44; BYTE $0x0f; BYTE $0x7f; BYTE $0x5f; BYTE $0x20
	RET

